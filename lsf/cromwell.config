include required(classpath("application"))
backend {
  default = "LSF"
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
        Int cpu = 1
        Int? memory
        String? job_group
        String? docker
        """
        submit = """
        bsub \
        -cwd ${cwd} \
        -o /dev/null \
        -e /gscmnt/gc2764/cad/jgarza/chromoseq_testing/cromwell/bsub_errs/cromwell-%J.err \
        -a "docker(mgibio/basespace_chromoseq:latest)"
        -M 64000000 \
        -n ${cpu} \
        -R "select[mem>64000] rusage[mem=64000]" \
        /bin/bash ${script}
        """
        submit-docker = """
        LSF_DOCKER_PRESERVE_ENVIRONMENT=false \
        LSF_DOCKER_VOLUMES=${cwd}:${docker_cwd} \
        bsub \
        -cwd ${cwd} \
        -o /dev/null \
        -e /gscmnt/gc2764/cad/jgarza/chromoseq_testing/cromwell/bsub_errs/cromwell-%J.err \
        -a "docker(${docker})" \
        -q research-hpc \
        -M 64000000 \
        -n ${cpu} \
        -R "select[mem>64000] rusage[mem=64000]" \
        /bin/bash ${script}
        """
        kill = "bkill ${job_id}"
        docker-kill = "bkill ${job_id}"
        check-alive = "bjobs -noheader -o stat ${job_id} | /bin/grep 'PEND\\|RUN'"
        job-id-regex = "Job <(\\d+)>.*"
        root = "/gscmnt/gc2764/cad/jgarza/chromoseq_testing/cromwell/cromwell-executions"
      }
    }
  }
}
workflow-options {
  workflow-log-dir = "/gscmnt/gc2764/cad/jgarza/chromoseq_testing/cromwell/cromwell-workflow-logs"
}
